{"version":3,"file":"static/js/114.ed8a45b0.chunk.js","mappings":"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","sources":["components/Buttons/Buttons.jsx","redux/usersSelectors.js","components/Filters/Filters.jsx","components/Card/Card.jsx","helpers/dataFollowersInString.js","components/ListCards/ListCards.jsx","components/Loader/Loader.jsx","components/Section/MainSection.jsx","pages/Tweets.jsx"],"sourcesContent":["import { BtnFilter, ButtonFollows } from 'components/Style/Style.styled';\n\nexport const LoadMoreBtn = ({ onClick }) => (\n  <ButtonFollows\n    type=\"button\"\n    onClick={onClick}\n    style={{\n      backgroundColor: '#5CD3A8',\n    }}\n  >\n    Load more\n  </ButtonFollows>\n);\n\nexport const ButtonFilter = ({\n  selected = false,\n  type = 'button',\n  children,\n  ...otherProps\n}) => {\n  return (\n    <BtnFilter type={type} {...otherProps}>\n      {children}\n    </BtnFilter>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit/dist';\nimport { statusFilters } from 'helpers/statusFilters';\n\nexport const selectState = state => state.users;\nexport const selectUsers = state => state.users.items;\nexport const selectPagination = state => state.users.pagination;\nexport const selectStatusFilter = state => state.filters.status;\n\nexport const selectVisibleUsers = createSelector(\n  [selectUsers, selectStatusFilter],\n  (users, statusFilter) => {\n    switch (statusFilter) {\n      case statusFilters.follow:\n        return users.filter(user => !user.isFollower);\n      case statusFilters.following:\n        return users.filter(user => user.isFollower);\n      default:\n        return users;\n    }\n  }\n);\n","import { ButtonFilter } from 'components/Buttons/Buttons';\nimport { statusFilters } from 'helpers/statusFilters';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setStatusFilter } from 'redux/filtersSlice';\nimport { selectStatusFilter } from 'redux/usersSelectors';\n\nexport const StatusFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\n  return (\n    <div>\n      <ButtonFilter\n        selected={filter === statusFilters.all}\n        onClick={() => handleFilterChange(statusFilters.all)}\n      >\n        All\n      </ButtonFilter>\n      <ButtonFilter\n        selected={filter === statusFilters.follow}\n        onClick={() => handleFilterChange(statusFilters.follow)}\n      >\n        Follow\n      </ButtonFilter>\n      <ButtonFilter\n        selected={filter === statusFilters.following}\n        onClick={() => handleFilterChange(statusFilters.following)}\n      >\n        Following\n      </ButtonFilter>\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { changeUser } from '../../redux/usersOperations';\nimport {\n  Avatar,\n  AvatarWrap,\n  ButtonFollows,\n  DecorLine,\n  Followers,\n  InfoWrapper,\n  Item,\n  Tweets,\n} from 'components/Style/Style.styled';\nimport { dataFollowersInString } from '../../helpers/dataFollowersInString';\n\nexport const Card = ({ avatar, tweets, followers, user, id, isFollower }) => {\n  const dispatch = useDispatch();\n  const oneUser = { avatar, tweets, user, id };\n\n  const handlerClick = () => {\n    if (!isFollower) {\n      dispatch(\n        changeUser({\n          ...oneUser,\n          followers: followers + 1,\n          isFollower: true,\n        })\n      );\n    } else {\n      dispatch(\n        changeUser({\n          ...oneUser,\n          followers: followers - 1,\n          isFollower: false,\n        })\n      );\n    }\n  };\n\n  return (\n    <Item>\n      <DecorLine>\n        <AvatarWrap>\n          <Avatar src={avatar} alt={user} />\n        </AvatarWrap>\n        <InfoWrapper>\n          <Tweets>{tweets} Tweets</Tweets>\n          <Followers>{dataFollowersInString(followers)} Followers</Followers>\n          <ButtonFollows\n            type=\"button\"\n            onClick={handlerClick}\n            bgColor={isFollower}\n          >\n            {!isFollower ? 'Follow' : 'Following'}\n          </ButtonFollows>\n        </InfoWrapper>\n      </DecorLine>\n    </Item>\n  );\n};\n","export const dataFollowersInString = (f) => {\n  if (f.toString().length > 3) {\n    return (\n      f.toString().slice(0, f.toString().length - 3) +\n      \",\" +\n      f.toString().slice(f.toString().length - 3)\n    );\n  }\n  return f.toString();\n};\n","import { Card } from '../Card/Card';\nimport { List } from 'components/Style/Style.styled';\n\nexport const ListCards = ({ items }) => {\n  return (\n    <List>\n      {items?.map(item => (\n        <Card\n          key={item.id}\n          avatar={item.avatar}\n          tweets={item.tweets}\n          followers={item.followers}\n          user={item.user}\n          id={item.id}\n          isFollower={item.isFollower}\n        />\n      ))}\n    </List>\n  );\n};\n","import PacmanLoader from 'react-spinners/PacmanLoader';\nimport { LoaderContainer } from 'components/Style/Style.styled';\n\nexport const Loader = () => (\n  <LoaderContainer>\n    <PacmanLoader color=\"#f7f507\" size=\"50px\" />\n  </LoaderContainer>\n);\n","import { LoadMoreBtn } from 'components/Buttons/Buttons';\nimport { StatusFilter } from 'components/Filters/Filters';\nimport { ListCards } from 'components/ListCards/ListCards';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  ButtonFilters,\n  CardsContainer,\n  Navlink,\n  SectionContainer,\n  Warning,\n} from 'components/Style/Style.styled';\nimport { statusFilters } from 'helpers/statusFilters';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { fetchUsers } from 'redux/usersOperations';\nimport {\n  selectPagination,\n  selectState,\n  selectVisibleUsers,\n} from 'redux/usersSelectors';\nimport { setPagination } from 'redux/usersSlice';\n\nexport const MainSection = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const users = useSelector(selectVisibleUsers);\n\n  const { isLoading, error, items } = useSelector(selectState);\n  const { page, limit } = useSelector(selectPagination);\n\n  const [showBtn, setShowBtn] = useState(true);\n\n  useEffect(() => {\n    dispatch(fetchUsers({ page, limit }));\n  }, [dispatch, page, limit]);\n\n  const onLoadMore = () => {\n    dispatch(setPagination({ page, limit: limit + 3 }));\n    if (limit > items.length) {\n      setShowBtn(false);\n    }\n  };\n\n  const onSelectFilter = (users, filter) => {\n    switch (filter) {\n      case statusFilters.follow:\n        return users.filter(user => !user.isFollower);\n      case statusFilters.following:\n        return users.filter(user => user.isFollower);\n      default:\n        return users;\n    }\n  };\n\n  const filteredUsers = onSelectFilter(users);\n\n  const goBackLink = location?.state?.from ?? '/';\n\n  return (\n    <>\n      <Navlink to={goBackLink}>Go back</Navlink>\n      <ButtonFilters>Filters</ButtonFilters>\n      <StatusFilter />\n      <SectionContainer>\n        <CardsContainer>\n          {isLoading && !error && <Loader />}\n          <ListCards items={filteredUsers} />\n          {isLoading && <Loader />}\n        </CardsContainer>\n        {showBtn ? (\n          <LoadMoreBtn onClick={onLoadMore} />\n        ) : (\n          <Warning>Sorry this is the end!</Warning>\n        )}\n      </SectionContainer>\n    </>\n  );\n};\n","import { MainSection } from 'components/Section/MainSection';\n\nconst Tweets = () => <MainSection />;\n\nexport default Tweets;\n"],"names":["LoadMoreBtn","onClick","type","style","backgroundColor","ButtonFilter","selected","children","otherProps","selectState","state","users","selectPagination","pagination","selectStatusFilter","filters","status","selectVisibleUsers","createSelector","items","statusFilter","statusFilters","filter","user","isFollower","StatusFilter","dispatch","useDispatch","useSelector","handleFilterChange","setStatusFilter","Card","f","avatar","tweets","followers","id","oneUser","src","alt","toString","length","slice","changeUser","bgColor","ListCards","map","item","Loader","color","size","MainSection","location","useLocation","isLoading","error","page","limit","useState","showBtn","setShowBtn","useEffect","fetchUsers","filteredUsers","onSelectFilter","goBackLink","from","to","setPagination"],"sourceRoot":""}